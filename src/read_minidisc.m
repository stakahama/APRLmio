
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% file: read_minidisc.m
%% author: S. Takahama, G. Ergin
%% date:May 2015
%% prepared for Radon project
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function minidisc = read_minidisc(filename)
  %% filename is assumed to be a file generated by minidisc software
  %%   and contains number concentrations
  %% minidisc is a struct that contains the following attributions:
  %%   timeis an internal representation of Matlab times
  %%   numconc is a matrix of number concentrations 
  %% example usage:
  %%   mini = read_minidisc(filename);
  %%   plot(mini.time,mini.numconc);
  %%   datetick('x');

  %% read file
  fid   = fopen(filename);
  nskip = 6;
  dtcell = {};
  dtpattern = '\[File start .+[:] (.+)\]';
  i = 1;
  while i < nskip,
    line_ = fgetl(fid);
    if ~isempty(regexp(line_,'date|time')),
      dtcell = [dtcell,{regexprep(line_,dtpattern,'$1')}];
    end
    i = i+1;
    disp(line_)
  end
  frewind(fid);
  data = textscan(fid,'%f%f%f%f%f%f%f%f','HeaderLines',nskip);
  fclose(fid);
  %% end read file

  %% parse data
  fmt = 'yyyy.mm.dd HH:MM:SS';
  t_minidisc=data{1};
  numconc=data{2};
  start_time_seconds = datenum(sprintf('%s %s',dtcell{:}),fmt);
  op_time= start_time_seconds+t_minidisc/86400.0;
  formatted_time = datestr(op_time,fmt);
  %% end parse data

  %% output
  minidisc = struct('time',op_time,'numconc',numconc, ...
		    'formatted_time',formatted_time); 
  %% end output

  return
